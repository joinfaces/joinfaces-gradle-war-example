# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        java: [17]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Build with Gradle
        run: ./gradlew build --no-daemon

  deploy-to-tomcat:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        java: [17]
        tomcat: [10.0.16]
    env: 
      TOMCAT_VERSION: ${{ matrix.tomcat }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Prepare Tomcat ${{ matrix.tomcat }}
        run: |
          wget https://archive.apache.org/dist/tomcat/tomcat-${TOMCAT_VERSION:0:2}/v${{ matrix.tomcat }}/bin/apache-tomcat-${{ matrix.tomcat }}.zip
          unzip apache-tomcat-${{ matrix.tomcat }}.zip
          chmod a+x apache-tomcat-${{ matrix.tomcat }}/bin/*.sh
          apache-tomcat-${{ matrix.tomcat }}/bin/catalina.sh start
      - name: Build with Gradle
        run: ./gradlew bootWar --no-daemon
      - name: Deploy to Tomcat
        run: cp build/libs/joinfaces-gradle-war-example.war apache-tomcat-${{ matrix.tomcat }}/webapps/
      - name: Verify Deployment
        run: |
          timeout --preserve-status 60s tail -f apache-tomcat-${{ matrix.tomcat }}/logs/catalina.out || true
          wget localhost:8080/joinfaces-gradle-war-example/index.xhtml
          grep "Hello from Spring" index.xhtml
